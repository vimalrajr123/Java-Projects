package com.example.dbs.ibanking.controller;


import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
import com.example.dbs.ibanking.helper.IbankHelper;
import com.example.dbs.ibanking.model.Movies;
import com.example.dbs.ibanking.model.MoviesDTO;
import com.example.dbs.ibanking.model.CommonResponse;
import com.example.dbs.ibanking.service.MoviesService;

//@Controller
@RestController   
@RequestMapping("/movies")
//@Slf4j
public class MoviesController {
	
	
	@Autowired
	MoviesService ibankingService;
	
	@Autowired
	IbankHelper ibankHelper;
	
	//@RequestMapping(value= "/getUserById/{id}",method=RequestMethod.GET,consumes ="application/json",produces = "application/json")
	@GetMapping("/getMoivesById/{id}")
	//@ResponseBody
	public ResponseEntity<CommonResponse> getMoivesById(@PathVariable int id) {
		
		CommonResponse moviesResponse ; 
		
		Movies movies = ibankingService.getMoviesById(id);
		if(movies==null){
			//runtime exception  
			moviesResponse = ibankHelper.getResponseDetails(404, "User not found", movies);
			return new ResponseEntity<CommonResponse>(moviesResponse, HttpStatus.NOT_FOUND);
			}  
		
		moviesResponse = ibankHelper.getResponseDetails(200, "User retrieved successfully", movies);
		return new ResponseEntity<CommonResponse>(moviesResponse, HttpStatus.OK);
	}
	
	@DeleteMapping("/deleteMoviesById/{id}")
	//@ResponseBody
	public ResponseEntity<CommonResponse> deleteUserById(@PathVariable int id) {
		ibankingService.deleteMoviesById(id);
		return null;
	}
	
	@PutMapping("updateMoviesNameById/{id}/{name}")
	//@ResponseBody
	public ResponseEntity<CommonResponse> updateUserById(@PathVariable int id,@PathVariable String Name){
		
		CommonResponse userResponse; 
		User user = ibankingService.updateUserNameById(id,Name);
		userResponse = ibankHelper.getResponseDetails(200, "User updated successfully", user);
		return new ResponseEntity<CommonResponse>(userResponse, HttpStatus.OK);
	}
	
	
	@PostMapping("/createnewuser")
	//@ResponseBody
	public ResponseEntity<CommonResponse> createNewUser(@RequestBody UserDTO userDTO){
		
		CommonResponse userResponse; 
		User user = ibankingService.createNewUser(userDTO.getName(),userDTO.getDesignation(),userDTO.getSalary(),userDTO.getAge());
		userResponse = ibankHelper.getResponseDetails(200, "User created successfully", user);
		return new ResponseEntity<CommonResponse>(userResponse,HttpStatus.OK);
	}
	
	@GetMapping("/getallusers")
	public ResponseEntity<CommonResponse> getAllUsers(){
		
		System.out.println("entered controller");
		CommonResponse userResponse;
		List<User> user =ibankingService.getAllUsers();
 		if(user==null){
			//runtime exception  
			userResponse = ibankHelper.getResponseDetails(404, "No Users found", user);
			return new ResponseEntity<CommonResponse>(userResponse, HttpStatus.NOT_FOUND);
			}  
		
		userResponse = ibankHelper.getResponseDetails(200, "Users retrieved successfully", user);
		return new ResponseEntity<CommonResponse>(userResponse, HttpStatus.OK);
		
	}
		
}
	
	
	
	

